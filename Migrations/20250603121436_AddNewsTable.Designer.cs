// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartCookFinal.Models;

#nullable disable

namespace SmartCookFinal.Migrations
{
    [DbContext(typeof(SmartCookContext))]
    [Migration("20250603121436_AddNewsTable")]
    partial class AddNewsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmailConfirmation", b =>
                {
                    b.Property<Guid>("ConfirmationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConfirmationID");

                    b.HasIndex("Id");

                    b.ToTable("EmailConfirmations");
                });

            modelBuilder.Entity("PasswordResetToken", b =>
                {
                    b.Property<Guid>("TokenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TokenID");

                    b.HasIndex("Id");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("SmartCookFinal.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isChecked")
                        .HasColumnType("bit");

                    b.HasKey("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("SmartCookFinal.Models.BlogComment", b =>
                {
                    b.Property<int>("BlogCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogCommentId"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommentedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BlogCommentId");

                    b.HasIndex("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("BlogComments");
                });

            modelBuilder.Entity("SmartCookFinal.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SmartCookFinal.Models.DanhMucMonAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhMucMonAns");
                });

            modelBuilder.Entity("SmartCookFinal.Models.MonAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AnKeto")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnKhongGluten")
                        .HasColumnType("bit");

                    b.Property<string>("CachNau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Carbs")
                        .HasColumnType("float");

                    b.Property<bool?>("Chay")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ChiPhiUocTinh")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DanhMucId")
                        .HasColumnType("int");

                    b.Property<string>("DinhDuongChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Fat")
                        .HasColumnType("float");

                    b.Property<string>("LoaiBuaAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LuongCalo")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyenLieuChinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Protein")
                        .HasColumnType("float");

                    b.Property<string>("TenMon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThoiGianNau")
                        .HasColumnType("int");

                    b.Property<bool?>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<string>("UrlHinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucId");

                    b.ToTable("MonAns");
                });

            modelBuilder.Entity("SmartCookFinal.Models.MonAnNguyenLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonAnId")
                        .HasColumnType("int");

                    b.Property<int>("NguyenLieuId")
                        .HasColumnType("int");

                    b.Property<float>("SoLuong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MonAnId");

                    b.HasIndex("NguyenLieuId");

                    b.ToTable("MonAnNguyenLieus");
                });

            modelBuilder.Entity("SmartCookFinal.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NewsId");

                    b.HasIndex("UserId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("SmartCookFinal.Models.NguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("CanNang")
                        .HasColumnType("real");

                    b.Property<string>("CheDoAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ChieuCao")
                        .HasColumnType("real");

                    b.Property<string>("DiUng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KhongThich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MucDoHoatDong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MucTieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NganSachToiDa")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoBuaMotNgay")
                        .HasColumnType("int");

                    b.Property<string>("TenNguoiDung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Tuoi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("SmartCookFinal.Models.NguyenLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Calo")
                        .HasColumnType("real");

                    b.Property<float>("Carbs")
                        .HasColumnType("real");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Fat")
                        .HasColumnType("real");

                    b.Property<float>("Protein")
                        .HasColumnType("real");

                    b.Property<string>("TenNguyenLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NguyenLieus");
                });

            modelBuilder.Entity("SmartCookFinal.Models.ThucDonChiTiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiBua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonAnId")
                        .HasColumnType("int");

                    b.Property<int>("ThucDonNgayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonAnId");

                    b.HasIndex("ThucDonNgayId");

                    b.ToTable("ThucDonChiTiets");
                });

            modelBuilder.Entity("SmartCookFinal.Models.ThucDonNgay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Ngay")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<int>("TongCalo")
                        .HasColumnType("int");

                    b.Property<float>("TongCarbs")
                        .HasColumnType("real");

                    b.Property<float>("TongFat")
                        .HasColumnType("real");

                    b.Property<float>("TongProtein")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("ThucDonNgays");
                });

            modelBuilder.Entity("EmailConfirmation", b =>
                {
                    b.HasOne("SmartCookFinal.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("PasswordResetToken", b =>
                {
                    b.HasOne("SmartCookFinal.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("SmartCookFinal.Models.Blog", b =>
                {
                    b.HasOne("SmartCookFinal.Models.NguoiDung", "User")
                        .WithMany("Blogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartCookFinal.Models.BlogComment", b =>
                {
                    b.HasOne("SmartCookFinal.Models.Blog", "Blog")
                        .WithMany("Comments")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartCookFinal.Models.NguoiDung", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartCookFinal.Models.MonAn", b =>
                {
                    b.HasOne("SmartCookFinal.Models.DanhMucMonAn", "DanhMuc")
                        .WithMany("MonAns")
                        .HasForeignKey("DanhMucId");

                    b.Navigation("DanhMuc");
                });

            modelBuilder.Entity("SmartCookFinal.Models.MonAnNguyenLieu", b =>
                {
                    b.HasOne("SmartCookFinal.Models.MonAn", "MonAn")
                        .WithMany("MonAnNguyenLieus")
                        .HasForeignKey("MonAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartCookFinal.Models.NguyenLieu", "NguyenLieu")
                        .WithMany("MonAnNguyenLieus")
                        .HasForeignKey("NguyenLieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonAn");

                    b.Navigation("NguyenLieu");
                });

            modelBuilder.Entity("SmartCookFinal.Models.News", b =>
                {
                    b.HasOne("SmartCookFinal.Models.NguoiDung", "User")
                        .WithMany("News")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartCookFinal.Models.ThucDonChiTiet", b =>
                {
                    b.HasOne("SmartCookFinal.Models.MonAn", "MonAn")
                        .WithMany("ThucDonChiTiets")
                        .HasForeignKey("MonAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartCookFinal.Models.ThucDonNgay", "ThucDonNgay")
                        .WithMany("ThucDonChiTiets")
                        .HasForeignKey("ThucDonNgayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonAn");

                    b.Navigation("ThucDonNgay");
                });

            modelBuilder.Entity("SmartCookFinal.Models.ThucDonNgay", b =>
                {
                    b.HasOne("SmartCookFinal.Models.NguoiDung", "NguoiDung")
                        .WithMany("ThucDonNgays")
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("SmartCookFinal.Models.Blog", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("SmartCookFinal.Models.DanhMucMonAn", b =>
                {
                    b.Navigation("MonAns");
                });

            modelBuilder.Entity("SmartCookFinal.Models.MonAn", b =>
                {
                    b.Navigation("MonAnNguyenLieus");

                    b.Navigation("ThucDonChiTiets");
                });

            modelBuilder.Entity("SmartCookFinal.Models.NguoiDung", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Comments");

                    b.Navigation("News");

                    b.Navigation("ThucDonNgays");
                });

            modelBuilder.Entity("SmartCookFinal.Models.NguyenLieu", b =>
                {
                    b.Navigation("MonAnNguyenLieus");
                });

            modelBuilder.Entity("SmartCookFinal.Models.ThucDonNgay", b =>
                {
                    b.Navigation("ThucDonChiTiets");
                });
#pragma warning restore 612, 618
        }
    }
}
